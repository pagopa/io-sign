/* tslint:disable */
/* eslint-disable */
/**
 * Firma con IO - Issuer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Clause
 */
export interface Clause {
    /**
     * 
     * @type {string}
     * @memberof Clause
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof Clause
     */
    type: ClauseTypeEnum;
}


/**
 * @export
 */
export const ClauseTypeEnum = {
    Required: 'REQUIRED',
    Unfair: 'UNFAIR',
    Optional: 'OPTIONAL'
} as const;
export type ClauseTypeEnum = typeof ClauseTypeEnum[keyof typeof ClauseTypeEnum];


/**
 * Check if a given object implements the Clause interface.
 */
export function instanceOfClause(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function ClauseFromJSON(json: any): Clause {
    return ClauseFromJSONTyped(json, false);
}

export function ClauseFromJSONTyped(json: any, ignoreDiscriminator: boolean): Clause {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'title': json['title'],
        'type': json['type'],
    };
}

export function ClauseToJSON(value?: Clause | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'type': value.type,
    };
}

