openapi: 3.0.3
info:
  title: Firma con IO - Back office API
  version: 1.0.0
servers:
  - url: https://api.io.pagopa.it/api/v1/sign/backoffice
    description: production
security:
  - SubscriptionKey: []
paths:
  /api-keys/{id}:
    get:
      operationId: getApiKey
      tags:
        - Issuer
      summary: Get an API Key by Id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: "#/components/schemas/Id"
        - in: query
          name: include
          required: false
          schema:
            type: string
      responses:
        "200":
          description: "the api key"
        default:
          description: "error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"

  /issuers:
    post:
      operationId: createIssuer
      tags:
        - Issuer
      summary: Create an Issuer
      responses:
        201:
          description: "issuer created"
        default:
          description: "error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"

components:
  securitySchemes:
    SubscriptionKey:
      type: apiKey
      name: Ocp-Apim-Subscription-Key
      in: header

  schemas:
    ProblemDetail:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: about:blank
          example: https://example.com/problem/constraint-violation
        title:
          type: string
          description: >-
            A short, summary of the problem type. Written in english and
            readable

            for engineers (usually not suited for non technical stakeholders and

            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          description: >-
            The HTTP status code generated by the origin server for this
            occurrence of the problem.
          minimum: 100
          maximum: 600
          example: 200
        detail:
          type: string
          description: |-
            A human readable explanation specific to this occurrence of the
            problem.
          example: There was an error processing the request
        instance:
          type: string
          format: uri
          description: >-
            An absolute URI that identifies the specific occurrence of the
            problem. It may or may not yield further information if
            dereferenced.

    Id:
      type: string
      description: Entity Id
      format: NonEmptyString
      example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
      x-import: "@pagopa/ts-commons/lib/strings"
