openapi: 3.0.3
info:
  title: IO Sign - User API
  version: 0.0.1
security:
  - FunctionsKey: []
paths:
  /qtsp/clauses/filled_document:
    post:
      operationId: createFilledDocument
      summary: Create a filled document for QTSP. The caller of this API is expected to poll on it since the endpoint will return 404 until the ToS document gets processed.
      tags:
        - QTSP Clauses
      parameters:
        - in: header
          name: x-iosign-signer-id
          schema:
            type: string
            description: Signer Id
            minLength: 1
            example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateFilledDocumentBody"
      responses:
        "201":
          description: Filled document created
          headers:
            Location:
              schema:
                type: string
                format: url
              description: Callback url.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FilledDocumentDetailView"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Unexpected"

  /signers:
    post:
      operationId: getSignerByFiscalCode
      tags:
        - Signer
      summary: Get Signer By Fiscal Code
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetSignerByFiscalCodeBody"
      responses:
        "200":
          description: The Signer detail
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignerDetailView"
        "400":
          $ref: "#/components/responses/BadRequest"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: "#/components/responses/Unexpected"

  /info:
    get:
      operationId: getInfo
      responses:
        "200":
          description: Used to check if the function is active
          content:
            application/json:
              schema:
                type: string
                example: "It works"
        "400":
          $ref: "#/components/responses/BadRequest"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: "#/components/responses/Unexpected"

  /qtsp/clauses:
    get:
      operationId: getQtspClausesMetadata
      summary: Get clauses list and MRC from QTSP
      tags:
        - QTSP Clauses
      responses:
        "200":
          description: The QTSP clauses list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QtspClausesMetadataDetailView"
        "500":
          $ref: "#/components/responses/Unexpected"

  /signatures:
    post:
      operationId: createSignature
      summary: Create a Signature from SignatureRequest
      tags:
        - Signature
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSignatureBody"
      parameters:
        - in: header
          name: x-iosign-signer-id
          schema:
            type: string
            description: Signer Id
            minLength: 1
            example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          required: true
        - name: x-pagopa-lollipop-original-method
          in: header
          description: The method of the endpoint called by IO app
          required: true
          schema:
            $ref: "#/components/schemas/LollipopMethod"
        - name: x-pagopa-lollipop-original-url
          in: header
          description: The url of the endpoint called by IO app
          required: true
          schema:
            $ref: "#/components/schemas/LollipopOriginalURL"
        - name: x-pagopa-lollipop-auth-jwt
          in: header
          description: Auth token to retrieve the SPID/CIE User identity from IO
          required: true
          schema:
            $ref: "#/components/schemas/LollipopJWTAuthorization"
        - name: x-pagopa-lollipop-assertion-ref
          in: header
          description: The id of the assertion to retrieve
          required: true
          schema:
            $ref: "#/components/schemas/LollipopAssertionRef"
        - name: x-pagopa-lollipop-assertion-type
          in: header
          description: The assertion type (SAML / OIDC)
          required: true
          schema:
            $ref: "#/components/schemas/AssertionType"
        - name: x-pagopa-lollipop-user-id
          in: header
          description: User's fiscal code.
          required: true
          schema:
            $ref: "#/components/schemas/LollipopUserId"
        - name: x-pagopa-lollipop-public-key
          in: header
          description: User's public key
          required: true
          schema:
            $ref: "#/components/schemas/LollipopPublicKey"
        - name: signature-input
          in: header
          description: The signature input, needed to verify the `signature` header
          required: true
          schema:
            $ref: "#/components/schemas/LollipopSignatureInput"
        - name: signature
          in: header
          description: The signature of the HTTP request, signed by the client with its private key.
          required: true
          schema:
            $ref: "#/components/schemas/LollipopSignature"
        - name: x-pagopa-lollipop-custom-tos-challange
          in: header
          description: The tos challenge to sign.
          required: true
          schema:
            type: string
            example: f46a0523e83e2c45b3b948e76bb6617d35e0159f9ae2ccf27865efb5d390f8aa
            minLength: 1
        - name: x-pagopa-lollipop-custom-sign-challenge
          in: header
          description: The challenge to sign concerning documents.
          required: true
          schema:
            type: string
            example: f46a0523e83e2c45b3b948e76bb6617d35e0159f9ae2ccf27865efb5d390f8aa
            minLength: 1
      responses:
        "200":
          description: Signature created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignatureDetailView"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: "#/components/responses/Unexpected"

  /signature-requests/{id}:
    get:
      operationId: getSignatureRequestById
      summary: Get a Signature Request By Id
      tags:
        - Signature Request
      parameters:
        - in: path
          name: id
          schema:
            type: string
            description: Entity Id
            format: ulid
            example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          required: true
        - in: header
          name: x-iosign-signer-id
          schema:
            type: string
            description: Signer Id
            minLength: 1
            example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          required: true
      responses:
        "200":
          description: The Signature Request detail
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignatureRequestDetailView"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"

  /messages/{signature_request_id}:
    get:
      operationId: getThirdPartyMessageDetails
      summary: Retrieve a Third Party message with signature request documents
      tags:
        - Third Party Message
      parameters:
        - in: path
          name: signature_request_id
          schema:
            type: string
            description: Entity Id
            format: ulid
            example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          required: true
        - in: header
          name: fiscal_code
          schema:
            $ref: "#/components/schemas/FiscalCode"
          required: true
      responses:
        "200":
          description: The Third Party message detail
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThirdPartyMessage"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Unexpected"

  /messages/{signature_request_id}/{document_id}:
    get:
      operationId: getThirdPartyMessageAttachmentContent
      summary: Retrieve a Third Party message attachment content (document)
      tags:
        - Third Party Message
      parameters:
        - in: path
          name: signature_request_id
          schema:
            type: string
            description: Signature request Id
            format: ulid
            example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          required: true
        - in: path
          name: document_id
          schema:
            type: string
            description: Document Id
            format: ulid
            example: 01ARZ3NDEKTSV4RRFFQ69G5FAA
          required: true
        - in: header
          name: fiscal_code
          schema:
            $ref: "#/components/schemas/FiscalCode"
          required: true
      responses:
        "200":
          description: The Third Party message detail
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ThirdPartyMessageAttachmentContent"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Unexpected"

components:
  securitySchemes:
    FunctionsKey:
      type: apiKey
      name: X-Functions-Key
      in: header

  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProblemDetail"

    BadRequest:
      description: Validation error on body
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProblemDetail"

    Forbidden:
      description: You don't have enough privileges to perform this action
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProblemDetail"

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProblemDetail"

    TooManyRequests:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProblemDetail"

    Unexpected:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProblemDetail"

  schemas:
    ProblemDetail:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: about:blank
          example: https://example.com/problem/constraint-violation
        title:
          type: string
          description: >-
            A short, summary of the problem type. Written in english and
            readable

            for engineers (usually not suited for non technical stakeholders and

            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          description: >-
            The HTTP status code generated by the origin server for this
            occurrence of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 200
        detail:
          type: string
          description: |-
            A human readable explanation specific to this occurrence of the
            problem.
          example: There was an error processing the request
        instance:
          type: string
          format: uri
          description: >-
            An absolute URI that identifies the specific occurrence of the
            problem. It may or may not yield further information if
            dereferenced.
    Timestamp:
      type: string
      format: UTCISODateFromString
      description: A date-time field in ISO-8601 format and UTC timezone.
      x-import: "@pagopa/ts-commons/lib/dates"
      example: "2018-10-13T00:00:00.000Z"

    Id:
      type: string
      description: Entity Id
      minLength: 1
      example: 01ARZ3NDEKTSV4RRFFQ69G5FAV

    FiscalCode:
      type: string
      description: User's fiscal code.
      format: FiscalCode
      x-import: "@pagopa/ts-commons/lib/strings"
      example: SPNDNL80R13C555X

    Email:
      type: string
      description: User's email.
      format: email
      example: me@example.com

    CreateFilledDocumentBody:
      type: object
      properties:
        document_url:
          description: Base64 encoded document url
          type: string
          minLength: 1
          format: byte
        email:
          $ref: "#/components/schemas/Email"
        name:
          type: string
          minLength: 1
        family_name:
          type: string
          minLength: 1
      required:
        - document_url
        - email
        - name
        - family_name

    FilledDocumentDetailView:
      type: object
      properties:
        filled_document_url:
          type: string
          format: url
      required:
        - filled_document_url

    GetSignerByFiscalCodeBody:
      type: object
      properties:
        fiscal_code:
          $ref: "#/components/schemas/FiscalCode"
      required:
        - fiscal_code

    SignerDetailView:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/Id"
      required:
        - id

    QtspClause:
      type: object
      properties:
        text:
          type: string
          minLength: 1
      required:
        - text

    QtspClausesMetadataDetailView:
      type: object
      properties:
        clauses:
          type: array
          items:
            $ref: "#/components/schemas/QtspClause"
          minItems: 1
          uniqueItems: true
        document_url:
          type: string
          format: url
        privacy_url:
          type: string
          format: url
        privacy_text:
          type: string
          minLength: 1
        terms_and_conditions_url:
          type: string
          format: url
        nonce:
          type: string
          format: base64
          minLength: 1
      required:
        - clauses
        - document_url
        - privacy_url
        - privacy_text
        - terms_and_conditions_url
        - nonce

    Clause:
      type: object
      properties:
        title:
          type: string
        type:
          type: string
          enum: ["REQUIRED", "UNFAIR", "OPTIONAL"]
      required:
        - title
        - type

    ExistingSignatureFieldAttrs:
      type: object
      properties:
        unique_name:
          type: string
          minLength: 1
      required:
        - unique_name

    SignatureFieldToBeCreatedAttrs:
      type: object
      properties:
        bottom_left:
          type: object
          properties:
            x: { type: number }
            y: { type: number }
          required:
            - x
            - y
        top_right:
          type: object
          properties:
            x: { type: number }
            y: { type: number }
          required:
            - x
            - y
        page:
          type: number
          minimum: 0
      required:
        - bottom_left
        - page
        - top_right

    SignatureFieldAttrs:
      oneOf:
        - $ref: "#/components/schemas/ExistingSignatureFieldAttrs"
        - $ref: "#/components/schemas/SignatureFieldToBeCreatedAttrs"

    SignatureField:
      type: object
      properties:
        attrs:
          $ref: "#/components/schemas/SignatureFieldAttrs"
        clause:
          $ref: "#/components/schemas/Clause"
      required:
        - attrs
        - clause

    DocumentToSign:
      type: object
      properties:
        document_id:
          type: string
          format: ulid
          minLength: 1
        signature_fields:
          type: array
          items:
            $ref: "#/components/schemas/SignatureField"
      required:
        - document_id
        - signature_fields

    DocumentMetadata:
      type: object
      properties:
        title:
          type: string
        signature_fields:
          type: array
          items:
            $ref: "#/components/schemas/SignatureField"
      required:
        - title
        - signature_fields

    QtspClauses:
      type: object
      properties:
        accepted_clauses:
          type: array
          items:
            $ref: "#/components/schemas/QtspClause"
          minItems: 1
          uniqueItems: true
        filled_document_url:
          description: Base64 encoded url
          type: string
          minLength: 1
          format: byte
        nonce:
          type: string
          format: base64
          minLength: 1
      required:
        - accepted_clauses
        - filled_document_url
        - nonce

    CreateSignatureBody:
      type: object
      properties:
        signature_request_id:
          $ref: "#/components/schemas/Id"
        email:
          $ref: "#/components/schemas/Email"
        documents_to_sign:
          type: array
          items:
            $ref: "#/components/schemas/DocumentToSign"
          minItems: 1
          uniqueItems: true
        qtsp_clauses:
          $ref: "#/components/schemas/QtspClauses"
      required:
        - signature_request_id
        - email
        - documents_to_sign
        - qtsp_clauses

    SignatureDetailView:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/Id"
        signature_request_id:
          $ref: "#/components/schemas/Id"
        qtsp_signature_request_id:
          $ref: "#/components/schemas/Id"
        status:
          type: string
          enum: ["CREATED", "READY", "WAITING", "COMPLETED", "FAILED"]
        created_at:
          $ref: "#/components/schemas/Timestamp"
        updated_at:
          $ref: "#/components/schemas/Timestamp"
      required:
        - id
        - signature_request_id
        - qtsp_signature_request_id
        - status

    DocumentDetailView:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/Id"
        metadata:
          $ref: "#/components/schemas/DocumentMetadata"
        url:
          type: string
          format: uri
        created_at:
          $ref: "#/components/schemas/Timestamp"
        updated_at:
          $ref: "#/components/schemas/Timestamp"
      required:
        - id
        - metadata
        - url
        - created_at
        - updated_at

    SignatureRequestDetailView:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/Id"
        status:
          type: string
          x-extensible-enum:
            - WAIT_FOR_SIGNATURE
            - WAIT_FOR_QTSP
            - SIGNED
            - REJECTED
        issuer:
          type: object
          properties:
            email:
              type: string
              format: email
            description:
              type: string
              minLength: 1
          required:
            - email
            - description
        dossier_id:
          $ref: "#/components/schemas/Id"
        signer_id:
          $ref: "#/components/schemas/Id"
        expires_at:
          $ref: "#/components/schemas/Timestamp"
        documents:
          type: array
          items:
            $ref: "#/components/schemas/DocumentDetailView"
        created_at:
          $ref: "#/components/schemas/Timestamp"
        updated_at:
          $ref: "#/components/schemas/Timestamp"
        qr_code_url:
          type: string
          format: uri
      required:
        - id
        - status
        - issuer
        - dossier_id
        - signer_id
        - expires_at
        - documents
        - created_at
        - updated_at

    ThirdPartyMessage:
      type: object
      properties:
        attachments:
          type: array
          items:
            $ref: "#/components/schemas/ThirdPartyAttachment"
      required:
        - attachments

    ThirdPartyAttachment:
      type: object
      properties:
        id:
          type: string
          minLength: 1
        content_type:
          type: string
          minLength: 1
        name:
          type: string
          minLength: 1
        url:
          type: string
          minLength: 1
      required:
        - id
        - url

    ThirdPartyMessageAttachmentContent:
      type: string
      format: binary

    LollipopMethod:
      type: string
      enum:
        - GET
        - POST
        - PUT
        - PATCH
        - DELETE
    LollipopOriginalURL:
      type: string
      pattern: "^https:\/\/"
    AssertionType:
      type: string
      enum:
        - SAML
        - OIDC
    LollipopAssertionRef:
      oneOf:
        - $ref: "#/components/schemas/AssertionRefSha256"
        - $ref: "#/components/schemas/AssertionRefSha384"
        - $ref: "#/components/schemas/AssertionRefSha512"
    LollipopUserId:
      type: string
      maxLength: 16
      minLength: 16
      description: The user's fiscal code, all upper case.
      pattern: >-
        ^[A-Z]{6}[0-9LMNPQRSTUV]{2}[ABCDEHLMPRST][0-9LMNPQRSTUV]{2}[A-Z][0-9LMNPQRSTUV]{3}[A-Z]$
    LollipopPublicKey:
      type: string
      minLength: 1
      description: represents a Base64url encode of a JWK Public Key
    LollipopJWTAuthorization:
      type: string
      minLength: 1

    LollipopContentType:
      type: string
      enum:
        - application/json
        - application/octet-stream
    LollipopContentDigest:
      type: string
      pattern: "^(sha-256=:[A-Za-z0-9+/=]{44}:|sha-384=:[A-Za-z0-9+/=]{66}:|sha-512=:[A-Za-z0-9+/=]{88}:)$"

    LollipopSignatureInput:
      type: string
      pattern: "^(((sig[0-9]+)=[^,]*?)(, ?)?)+$"
    LollipopSignature:
      type: string
      pattern: "^((sig[0-9]+)=:[A-Za-z0-9+/=]*:(, ?)?)+$"

    # AssertionRef possible inputs
    AssertionRefSha256:
      type: string
      pattern: ^(sha256-[A-Za-z0-9-_=]{1,44})$
    AssertionRefSha384:
      type: string
      pattern: ^(sha384-[A-Za-z0-9-_=]{1,66})$
    AssertionRefSha512:
      type: string
      pattern: ^(sha512-[A-Za-z0-9-_=]{1,88})$
