/**
 * Do not edit this file it is auto-generated by io-utils / gen-api-models.
 * See https://github.com/pagopa/io-utils
 */
/* eslint-disable  */

import { Id } from "./Id";
import { Timestamp } from "./Timestamp";
import { Document } from "./Document";
import { Notification } from "./Notification";
import * as t from "io-ts";
import { enumType } from "@pagopa/ts-commons/lib/types";

export enum StatusEnum {
  "DRAFT" = "DRAFT",

  "READY" = "READY",

  "WAIT_FOR_SIGNATURE" = "WAIT_FOR_SIGNATURE",

  "WAIT_FOR_QTSP" = "WAIT_FOR_QTSP",

  "SIGNED" = "SIGNED",

  "REJECTED" = "REJECTED"
}

// required attributes
const SignatureRequestR = t.interface({
  id: Id,

  issuer_id: Id,

  signer_id: Id,

  dossier_id: Id,

  status: enumType<StatusEnum>(StatusEnum, "status"),

  created_at: Timestamp,

  updated_at: Timestamp,

  expires_at: Timestamp
});

// optional attributes
const SignatureRequestO = t.partial({
  rejected_at: Timestamp,

  signed_at: Timestamp,

  reject_reason: t.string,

  documents: t.readonlyArray(Document, "array of Document"),

  notification: Notification
});

export const SignatureRequest = t.exact(
  t.intersection([SignatureRequestR, SignatureRequestO], "SignatureRequest")
);

export type SignatureRequest = t.TypeOf<typeof SignatureRequest>;
