name: Deploy

on:
  workflow_call:
    inputs:
      workspace-name:
        required: true
        type: string
      environment:
        required: true
        type: string
    secrets:
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_CLIENT_ID:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - uses: "pagopa/io-std/build-workspace@SFEQS-2043-make-reusable-workflows"
        with:
          workspace-name: ${{ inputs.workspace-name }}

      - id: make_artifact
        uses: "pagopa/io-std/make-workspace-artifact@SFEQS-2043-make-reusable-workflows"
        with:
          workspace-name: ${{ inputs.workspace-name }}

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.workspace-name }}
          path: ${{ steps.make_artifact.outputs.artifact-path }}

  deploy:
    if: ${{ !github.event.act }}
    needs: [build]
    runs-on: self-hosted
    environment: ${{ inputs.environment }}

    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.workspace-name }}

      - uses: azure/login@v1
        with:
          client-id: ${{ secrets.azure_client_id }}
          tenant-id: ${{ secrets.azure_tenant_id }}
          subscription-id: ${{ secrets.azure_subscription_id }}

      - uses: azure/webapps-deploy@v2
        with:
          resource-group-name: ${{ vars.AZURE_WEB_APP_RESOURCE_GROUP }}
          app-name: ${{ vars.AZURE_WEB_APP_NAME }}
          slot-name: staging
          package: artifact.zip

  #swap_slot:
  #  if: ${{ !github.event.act }}
  #  needs: [deploy]
  #  runs-on: self-hosted
  #  environment: ${{ inputs.environment }}

  #  permissions:
  #    id-token: write
  #    contents: read

  #  steps:
  #    - run: curl -f 'https://${{ vars.AZURE_WEB_APP_NAME }}-staging.azurewebsites.net/health'

  #    - uses: azure/login@v1
  #      with:
  #        client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  #    - run: az webapp deployment slot swap -g ${{ vars.AZURE_WEB_APP_RESOURCE_GROUP }} -n ${{ vars.AZURE_WEB_APP_NAME }} --slot staging --target-slot production
